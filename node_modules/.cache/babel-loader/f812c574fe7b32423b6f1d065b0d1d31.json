{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ICHWAN SANUSI\\\\Downloads\\\\calculator-master\\\\calculator-master\\\\src\\\\component\\\\lightModeContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalLightModeContextValue = {\n  lightMode: false,\n  toogleLightMode: () => {}\n};\nconst LightModeContext = /*#__PURE__*/createContext(initalLightModeContextValue);\nfunction LightModeProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [lightMode, setLightMode] = useState(false);\n  const toogleLightMode = () => {\n    setLightMode(!lightMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LightModeContext.Provider, {\n      value: {\n        lightMode,\n        toogleLightMode\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(LightModeProvider, \"TAl4bMLlSIDmctH7p+vf0+Ai0Rc=\");\n_c = LightModeProvider;\nexport { LightModeContext, LightModeProvider };\nvar _c;\n$RefreshReg$(_c, \"LightModeProvider\");","map":{"version":3,"names":["React","createContext","useState","initalLightModeContextValue","lightMode","toogleLightMode","LightModeContext","LightModeProvider","children","setLightMode"],"sources":["C:/Users/ICHWAN SANUSI/Downloads/calculator-master/calculator-master/src/component/lightModeContext.tsx"],"sourcesContent":["import React, { createContext, useState } from \"react\"\n\nconst initalLightModeContextValue = {\n    lightMode: false,\n    toogleLightMode: () => { }\n}\nconst LightModeContext = createContext<{\n    lightMode: boolean;\n    toogleLightMode: () => void;\n}>(initalLightModeContextValue);\n\ntype Props = {\n    children: React.ReactNode\n}\n\nfunction LightModeProvider({ children }: Props) {\n    const [lightMode, setLightMode] = useState<boolean>(false);\n    const toogleLightMode = () => {\n        setLightMode(!lightMode);\n    }\n\n    return (\n        <div>\n            <LightModeContext.Provider value={{ lightMode, toogleLightMode }}>\n                {children}\n            </LightModeContext.Provider>\n        </div>\n    )\n}\n\nexport { LightModeContext, LightModeProvider };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAEtD,MAAMC,2BAA2B,GAAG;EAChCC,SAAS,EAAE,KAAK;EAChBC,eAAe,EAAE,MAAM,CAAE;AAC7B,CAAC;AACD,MAAMC,gBAAgB,gBAAGL,aAAa,CAGnCE,2BAA2B,CAAC;AAM/B,SAASI,iBAAiB,OAAsB;EAAA;EAAA,IAArB;IAAEC;EAAgB,CAAC;EAC1C,MAAM,CAACJ,SAAS,EAAEK,YAAY,CAAC,GAAGP,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAMG,eAAe,GAAG,MAAM;IAC1BI,YAAY,CAAC,CAACL,SAAS,CAAC;EAC5B,CAAC;EAED,oBACI;IAAA,uBACI,QAAC,gBAAgB,CAAC,QAAQ;MAAC,KAAK,EAAE;QAAEA,SAAS;QAAEC;MAAgB,CAAE;MAAA,UAC5DG;IAAQ;MAAA;MAAA;MAAA;IAAA;EACe;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEd;AAAC,GAbQD,iBAAiB;AAAA,KAAjBA,iBAAiB;AAe1B,SAASD,gBAAgB,EAAEC,iBAAiB;AAAG;AAAA"},"metadata":{},"sourceType":"module"}